version: '3.8'

name: eval_online

volumes:
  prometheus_data: {}
  grafana_data: {}
  shared_videos: {}

services:
  fastapi_server:
    build:
      context: ./fastapi_service
      dockerfile: Dockerfile
    container_name: fastapi_server
    ports:
      - "8000:8000"
    volumes:
      - shared_videos:/app/saved_videos
    # restart: unless-stopped

  flask:
    build:
      context: ./flask_app # Our local Flask app directory
      dockerfile: Dockerfile
    container_name: flask_app # Using flask_app for consistency, user used 'flask'
    ports:
      - "5000:5000"
    environment:
      - FASTAPI_SERVER_URL=http://fastapi_server:8000
    volumes:
      - shared_videos:/app/static/saved_videos # Mount to a subfolder in static
    depends_on:
      - fastapi_server
    # restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: ['--config.file=/etc/prometheus/prometheus.yml']
    # restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    # restart: unless-stopped

